{"ast":null,"code":"var _jsxFileName = \"C:\\\\github\\\\First-repo\\\\realmain\\\\src\\\\pages\\\\TeamRecruitment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamRecruitment = () => {\n  _s();\n  const [teamRecruitmentPosts, setTeamRecruitmentPosts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // 로그인 상태 (임시)\n\n  // 팀 모집 공고 가져오기\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/team-recruitment');\n        setTeamRecruitmentPosts(response.data);\n      } catch (error) {\n        console.error('팀 모집 공고를 가져오는 중 오류 발생:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // 새 공고 추가\n  const handleAddPost = async () => {\n    const newPost = {\n      title: '새로운 팀 모집 공고',\n      details: '세부 정보를 입력하세요.',\n      location: '서울 강남구',\n      time: '주말 오후 3시',\n      max_members: 10,\n      created_by: 'test@example.com'\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/team-recruitment', newPost);\n      setTeamRecruitmentPosts(prevPosts => [...prevPosts, response.data]);\n    } catch (error) {\n      console.error('새 공고를 추가하는 중 오류 발생:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-md rounded p-6 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD300 \\uBAA8\\uC9D1 \\uACF5\\uACE0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: teamRecruitmentPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border-b pb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: post.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLoggedIn &&\n    /*#__PURE__*/\n    // 로그인 상태에서만 \"작성하기\" 버튼 표시\n    _jsxDEV(\"button\", {\n      onClick: handleAddPost,\n      className: \"mt-6 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\",\n      children: \"\\uC791\\uC131\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamRecruitment, \"IZfo2IZNkZK1F/XHpXG4TXCLFaI=\");\n_c = TeamRecruitment;\nexport default TeamRecruitment;\nvar _c;\n$RefreshReg$(_c, \"TeamRecruitment\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TeamRecruitment","_s","teamRecruitmentPosts","setTeamRecruitmentPosts","isLoggedIn","setIsLoggedIn","fetchPosts","response","get","data","error","console","handleAddPost","newPost","title","details","location","time","max_members","created_by","post","prevPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","onClick","_c","$RefreshReg$"],"sources":["C:/github/First-repo/realmain/src/pages/TeamRecruitment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TeamRecruitment = () => {\r\n  const [teamRecruitmentPosts, setTeamRecruitmentPosts] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // 로그인 상태 (임시)\r\n\r\n  // 팀 모집 공고 가져오기\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/team-recruitment');\r\n        setTeamRecruitmentPosts(response.data);\r\n      } catch (error) {\r\n        console.error('팀 모집 공고를 가져오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // 새 공고 추가\r\n  const handleAddPost = async () => {\r\n    const newPost = {\r\n      title: '새로운 팀 모집 공고',\r\n      details: '세부 정보를 입력하세요.',\r\n      location: '서울 강남구',\r\n      time: '주말 오후 3시',\r\n      max_members: 10,\r\n      created_by: 'test@example.com',\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/team-recruitment', newPost);\r\n      setTeamRecruitmentPosts((prevPosts) => [...prevPosts, response.data]);\r\n    } catch (error) {\r\n      console.error('새 공고를 추가하는 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-md rounded p-6 max-w-2xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">팀 모집 공고</h1>\r\n      <ul className=\"space-y-4\">\r\n        {teamRecruitmentPosts.map((post) => (\r\n          <li key={post.id} className=\"border-b pb-4\">\r\n            <h2 className=\"text-lg font-semibold\">{post.title}</h2>\r\n            <p className=\"text-gray-600\">{post.details}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {isLoggedIn && ( // 로그인 상태에서만 \"작성하기\" 버튼 표시\r\n        <button\r\n          onClick={handleAddPost}\r\n          className=\"mt-6 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\r\n        >\r\n          작성하기\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamRecruitment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}